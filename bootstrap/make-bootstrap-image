#!/bin/bash

set -e

echo "Making a bootstrap VM."
echo "Forcing architecture to i386 and flavour to 'bootstrap local-config'."
echo "Run with IMAGE_FLAVOUR='bootstrap' to make an image with no local config (ssh key, http proxy)."
echo "Caching cloud image in ~/.cache/tripleo."
export ARCH=i386
export IMAGE_FLAVOUR=${IMAGE_FLAVOUR:-bootstrap local-config}
mkdir -p ~/.cache/tripleo
export IMG_PATH=~/.cache/tripleo
source $(dirname $0)/../scripts/img-defaults
source $(dirname $0)/../scripts/common-functions
source $(dirname $0)/../scripts/img-functions
BASE_DIR=$(dirname $0)/../scripts

set -x

ensure_sudo
ensure_nbd
mk_build_dir
ensure_base_available
qemu-img create -f qcow2 $TMP_IMAGE_PATH 16G

# Should have a grab-next-dev helper ?
NBD_DEV=/dev/nbd0
if [[ $(qemu-nbd --help | grep cache) == *writeback* ]] ; then 
  CACHE="--cache=writeback"
else 
  echo "Warning: qemu-nbd without --cache=writeback is /slow/."
  CACHE=""
fi
sudo qemu-nbd -c $NBD_DEV $CACHE $TMP_IMAGE_PATH 
export EXTRA_UNMOUNT="sudo qemu-nbd -d $NBD_DEV"
# Create 1 partition far enough up the disk to permit grub to be installed on
# the MBR.
sudo sfdisk $NBD_DEV << EOF
1 - - *
0 0;
0 0;
0 0;
EOF

sudo mkfs -F -t $FS_TYPE -L cloudimg-rootfs ${NBD_DEV}p1

mount_tmp_image ${NBD_DEV}p1

create_base

[ -e ~/.ssh/authorized_keys ] && export SSH_PUBKEY=`cat ~/.ssh/authorized_keys`
echo "XXX" $SSH_PUBKEY

do_pre_install
do_install

finalise_base

unmount_image

compress_image

save_image bootstrap.qcow2
