HeatTemplateFormatVersion: '2012-12-12'
Description: 'HEAT Template - All OpenStack Components Sharing boxes by class of service'
Parameters:
  KeyName: 
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: String
    Default: default
  InstanceType:
    Description: Use this flavor
    Type: String
    Default: bm.small
  NovaDbUser:
    Default: nova
    Description: Database User for Nova
    Type: String
  NovaDbPassword:
    Default: nova
    Description: Database Password for Nova
    Type: String
  NovaDatabase:
    Default: nova
    Description: Database for Nova
    Type: String
  GlanceDbUser:
    Default: glance
    Description: Database User for Glance
    Type: String
  GlanceDbPassword:
    Default: glance
    Description: Database Password for Glance
    Type: String
  GlanceDatabase:
    Default: glance
    Description: Database for Glance
    Type: String
  KeystoneDbUser:
    Default: keystone
    Description: Database User for Keystone
    Type: String
  KeystoneDbPassword:
    Default: keystone
    Description: Database Password for Keystone
    Type: String
  KeystoneDatabase:
    Default: keystone
    Description: Database for Keystone
    Type: String
  AllStoreImage:
    Type: String
  ApiImage:
    Type: String
Resources:
  AllStore:
    Type: AWS::EC2::Instance
    Metadata:
      TripleO::ImageBuilder::Elements: [ mysql ]
      TripleO::ImageBuilder::Packages: [ rabbitmq-server ]
    Properties:
      ImageId:
        {Ref: AllStoreImage}
      InstanceType: {Ref: InstanceType}
      KeyName: {Ref: KeyName}
  ApiAccessPolicy:
    Type: OS::Heat::AccessPolicy
    Properties:
      AllowedResources: [ ApiLaunch, ApiNodes ]
  ApiUser:
    Type: AWS::IAM::User
    Properties:
      Policies: [ { Ref: ApiAccessPolicy } ]
  ApiKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        Ref: ApiUser
  ApiLaunch:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        {Ref: ApiImage}
      InstanceType: {Ref: InstanceType}
      KeyName: {Ref: KeyName}
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            "/etc/cfn/cfn-credentials":
              content:
                Fn::Join:
                  - ""
                  - - "AWSAccessKeyId="
                    - { Ref: ApiKey }
                    - "\n"
                    - "AWSSecretKey="
                    - { "Fn::GetAtt": [ ApiKey, SecretAccessKey ] }
                    - "\n"
              mode: "000400"
              owner: root
              group: root
      TripleO::ImageBuilder::Elements: [ keystone , glance-api , nova-api ]
      OpenStack::Keystone::Database:
        Host: 
          Fn::GetAtt:
            - AllStore
            - PrivateIp
        User:
          Ref: KeystoneDbUser
        Database:
          Ref: KeystoneDatabase
        Password:
          Ref: KeystoneDbPassword
      OpenStack::Glance::Database:
        Host: 
          Fn::GetAtt:
            - AllStore
            - PrivateIp
        User:
          Ref: GlanceDbUser
        Database:
          Ref: GlanceDatabase
        Password:
          Ref: GlanceDbPassword
      OpenStack::Nova::Database:
        Host: 
          Fn::GetAtt:
            - AllStore
            - PrivateIp
        User:
          Ref: NovaDbUser
        Database:
          Ref: NovaDatabase
        Password:
          Ref: NovaDbPassword
      OpenStack::Nova::RPC:
        Type: rabbitmq
        Host:
          Fn::GetAtt:
            - AllStore
            - PrivateIp
  ApiNodes:
    Type: OS::Heat::InstanceGroup
    Properties:
      LaunchConfigurationName: { Ref: ApiLaunch }
      AvailabilityZones: [ 1 ]
      Size: '1'
