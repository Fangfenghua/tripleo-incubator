#!/usr/bin/env python
#
# Copyright (c) 2012 Hewlett-Packard Development Company, L.P.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.



import argparse
import os.path
import sys
from textwrap import dedent

import libvirt

basedir = os.path.dirname(__file__) 

from lib.settings import settings
from lib.functions import functions

def main():
    parser = argparse.ArgumentParser(
        description=""" # describe other stuff here 
        
                    # BareMetal Lan
                    Configure access to the baremetal LAN for the bootstrap VM.
                    The default will do nothing and error, as changing your machine
                    config can be considered unfriendly. Passing -y will trigger the 
                    demo mode where a local bridge called 'ooodemo' with no external
                    ports connected is created, which as many 'bare metal' virtual
                    machines as you want can be connected to - this is the device that
                    configure-bootstrap-vm uses by default.
            
                    If you are provising actual hardware, you will want to add actual
                    physical ports (e.g. eth1) by passing '--with-port=eth1' to this
                    script.
            
                    If you only have one ethernet port in your machine, you will want
                    to migrate your networking configuration to a bridge before running
                    this script, and then pass '--with-port=br0' (or whatever port
                    you chose). In future reconfiguring your local networking may be
                    available as an automated step.
            """)
    
    # actions
    parser.add_argument('run', action=functions,
        help='runs complete vm spin up')
    
    parser.add_argument('clean-only', nargs='?', action=functions,
        help='only runs the clean up')
    
    # VMS = 1
    parser.add_argument('--vms', nargs='?', default=settings.VMS,
        help='Total number of test nodes you wish you start (defaults=1).')
        
    # ARCH = "x86_64"
    parser.add_argument('--arch', nargs='?', default=settings.ARCH,
        help='i386, i686 or x86_64 (defaults=x86_64).')
        
    # ENGINE = "kvm"
    parser.add_argument('--engine', nargs='?', default=settings.ENGINE,
        help='qemu, kvm (defaults to kvm).')
        
    # MAX_MEM = "524000"
    parser.add_argument('--max-mem', nargs='?', default=settings.MAX_MEM,
        help='(defaults=524000).')
    
    # VCPU = "1" 
    parser.add_argument('--cpus', nargs='?', default=settings.CPUS,
        help='(defaults=1)')
        
    # QEMU = "qemu:///system"
    parser.add_argument('--qemu', nargs='?', default=settings.QEMU, 
        help='qemu address for lib virt ("qemu:///system")')
        
    # BASE_NAME = 'bm_poser_'
    parser.add_argument('--base-name', nargs='?', default=settings.QEMU, 
        help='base name of instances (defualt=bm_poser_)')
    
    # RUN_PATH = '/opt/stack/data/bm_poser/'
    parser.add_argument('--run-path', nargs='?', default=settings.RUN_PATH, 
        help='path to store disk images of running instances')
    
    # TEMPLATE_DISK = 'template.qcow2'
    parser.add_argument('--template-disk', nargs='?', default=settings.TEMPLATE_DISK, 
        help='name of empty qcow image file in lib.')
    
    # TEMPLATE_XML = "template.xml" %  
    parser.add_argument('--template-xml', nargs='?', default=settings.TEMPLATE_DISK, 
        help='name of template xml file in lib.')
    
    # START_DELAY = 2
    parser.add_argument('--start-delay', nargs='?', default=settings.START_DELAY, 
        help='time in seconds between starting instances')
    
     # BRIDGE = "br999"
    parser.add_argument('--bridge', nargs='?', default=settings.BRIDGE, 
        help='The name to give the bridge. (defautl=br999)')
    
    parser.add_argument('--bridge-port', nargs='?', action="append",
        help='Add a port (such as eth2) to the bridge.',
        default=[]) # Yes its mutable, don't reuse the parser.
    
    #parser.add_argument('-y', default=False, action='store_true',
    #    help='The interface which bare metal nodes will be connected to.')
        
    #parser.add_argument('-f', default='/etc/network/interfaces',
    #    help='Network config file to extend.')
        
    args = parser.parse_args()
    
    # validate input 
    #option_given = not (args.name == default_bridge and
    #                    len(args.with_port) == 0 and
    #                    args.y is False)
    
    #if not option_given:
    #    parser.print_help()
    #    sys.exit(1)
    

if __name__ == '__main__':
    main()